name: Test Typst Out Action

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test_typst_out_action:
    strategy:
      matrix:
        typst_ref:
          - e09b55f00f4213a76285e90825dfab570a051359 # latest main commit
          - v0.12.0 # latest release version
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Noto Sans CJK
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo apt-get update && sudo apt-get install -y fonts-noto-cjk
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            brew install --cask font-noto-sans-cjk
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            # Download the fonts
            curl -L -o noto-cjk.zip https://github.com/googlefonts/noto-cjk/releases/latest/download/NotoSansCJK.ttc.zip

            # Unzip the fonts
            powershell -Command "Expand-Archive -Path noto-cjk.zip -DestinationPath C:\\Fonts -Force"

            # Create Fonts directory if it doesn't exist
            if not exist "C:\\Fonts" mkdir C:\\Fonts

            # Move fonts to Fonts directory
            move C:\\Fonts\\*.ttc C:\\Windows\\Fonts\\

            # Register fonts
            reg add "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Fonts" /v "Noto Sans CJK (TrueType)" /t REG_SZ /d "NotoSansCJK.ttc" /f

            echo "Fonts installed successfully on Windows."
          fi

      - name: Verify Fonts Directory
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "Windows Fonts Path: C:\\Windows\\Fonts"
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "MacOS Fonts Path: /Library/Fonts"
          else
            echo "Linux Fonts Path: /usr/share/fonts/noto"
          fi

      - name: Create cjk.typ (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p test
          cat <<EOF > test/cjk.typ
          Chinese: 你好，世界！
          Japanese: こんにちは、世界！
          Korean: 안녕하세요, 세상아!
          EOF

      - name: Create cjk.typ (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path test
          @"
          Chinese: 你好，世界！
          Japanese: こんにちは、世界！
          Korean: 안녕하세요, 세상아!
          "@ | Out-File -FilePath .\test\cjk.typ -Encoding utf8

      - name: Test Typst Out Action
        uses: ./
        with:
          typst_ref: ${{ matrix.typst_ref }}
          retention_days: 7
          artifacts_name: typst_output_${{ matrix.typst_ref }}_${{ matrix.os }}
          output_extensions: pdf
          template_file: template.typ
          # fonts_path: |
          #   ${{ matrix.os == 'windows-latest' && 'C:\\Windows\\Fonts' ||
          #       matrix.os == 'macos-latest' && '/Library/Fonts' ||
          #       '/usr/share/fonts/noto' }}

      # This step is optional; it can be used to print the generated PDF file
      - name: Display generated PDF file
        shell: bash
        run: |
          ls -la
          find . -name "*.pdf"
