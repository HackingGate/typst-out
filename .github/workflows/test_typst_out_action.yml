name: Test Typst Out Action

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test_typst_out_action:
    strategy:
      matrix:
        typst_version:
          - latest
          - v0.13.1 # specify a version
          - 9a6268050fb769e18c4889fa5f59d4150e8878d6 # specify a commit hash
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Fonts
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            # Install Noto Sans CJK fonts
            sudo apt-get update && sudo apt-get install -y fonts-noto-cjk
            # Install other fonts may be used in the template
            sudo apt-get install -y \
            fonts-texgyre \
            fonts-cascadia-code
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            # Install Not Sans CJK fonts
            brew install --cask font-noto-sans-cjk
            # Install other fonts may be used in the template
            echo "Installing TeX Gyre fonts..."
            brew search font-tex-gyre | grep '^font-tex-gyre' | xargs -I{} brew install --cask {}
            echo "Installing Syne fonts..."
            brew search font-syne | grep '^font-syne' | xargs -I{} brew install --cask {}
            echo "Installing Barlow fonts..."
            brew search font-barlow | grep '^font-barlow' | xargs -I{} brew install --cask {}
            echo "Installing New Computer Modern..."
            # The actual cask name might be "font-new-computer-modern" or "font-newcomputermodern"
            brew install --cask font-new-computer-modern
            echo "Installing Cascadia Code..."
            brew install --cask font-cascadia-code
            echo "Installing PT Sans..."
            brew install --cask font-pt-sans
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "This step will be handled in a separate Windows-only step."
          else
            echo "Unsupported OS: ${{ matrix.os }}"
            exit 1
          fi

      - name: Install Noto Sans CJK (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "Downloading Noto Sans CJK..."
          $ProgressPreference = 'SilentlyContinue'
          # 1. Download the fonts
          Invoke-WebRequest `
            -Uri "https://github.com/notofonts/noto-cjk/releases/download/Sans2.004/00_NotoSansCJK.ttc.zip" `
            -OutFile "noto-cjk.zip"
          # 2. Create a destination folder (C:\Fonts) if it doesn't exist
          if (!(Test-Path "C:\Fonts")) {
            New-Item -ItemType Directory -Path "C:\Fonts" | Out-Null
          }
          # 3. Unzip to C:\Fonts
          Expand-Archive -Path "noto-cjk.zip" -DestinationPath "C:\Fonts" -Force
          # 4. Move the .ttc file(s) into C:\Windows\Fonts
          Move-Item -Path "C:\Fonts\*.ttc" -Destination "C:\Windows\Fonts" -Force
          # 5. Register the font in the Windows Registry
          New-ItemProperty `
            -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Fonts" `
            -Name "Noto Sans CJK (TrueType)" `
            -PropertyType String `
            -Value "NotoSansCJK.ttc" `
            -Force
          Write-Host "Fonts installed successfully on Windows."

      - name: Verify Fonts Directory
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "Windows Fonts Path: C:\\Windows\\Fonts"
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            echo "MacOS Fonts Path: /Library/Fonts"
          else
            echo "Linux Fonts Path: /usr/share/fonts/noto"
          fi

      - name: Create cjk.typ (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir -p test
          cat <<EOF > test/cjk.typ
          #set text(font: "Noto Sans CJK TC")
          Chinese: 你好，世界！

          #set text(font: "Noto Sans CJK JP")
          Japanese: こんにちは、世界！

          #set text(font: "Noto Sans CJK KR")
          Korean: 안녕하세요, 세상아!
          EOF

      - name: Create cjk.typ (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path test
          @"
          #set text(font: "Noto Sans CJK TC")
          Chinese: 你好，世界！

          #set text(font: "Noto Sans CJK JP")
          Japanese: こんにちは、世界！

          #set text(font: "Noto Sans CJK KR")
          Korean: 안녕하세요, 세상아!
          "@ | Out-File -FilePath .\test\cjk.typ -Encoding utf8

      - name: Test Typst Out Action
        uses: ./
        with:
          typst_version: ${{ matrix.typst_version }}
          retention_days: 7
          artifacts_name: typst_output_${{ matrix.typst_version }}_${{ matrix.os }}
          output_extensions: pdf
          template_file: template.typ

      - name: Display generated PDF file
        shell: bash
        run: |
          ls -la
          find . -name "*.pdf"
